package main

import (
	"compress/gzip"
	"encoding/hex"
	"fmt"
	"io"
	"os"
)

func main() {
	const rawhex = "1f8b0800239a62620003ed9aeb4fe34610c77f95ca1ff894849ddd9d7d209d2ad48784aa53ab838a0fd5c9f263cdb92471cede0410e277ef6c02e2e0706a5fe353798014647b1f5fcfccc733e3701d35ae69ca6a1e97797410e93fcf0e0f7f3de297ce94efc767a7d1285a36ae8ed3a471d1c1f5e6603dd229c1932271a9e6805ce649222cd7452eb4621a40d3ccbaaa66f13c99d1cc6876e6576360a804025d4a168bcd3245b14c969f57751add8ca2bb5d3e574dbc7275904543f884d18cdcadcacc6d26e5a9e1a9ce33459faa6058a42a3769964b535806694ac3d3e53c9fde0effe4fda239d8dfbfb8b898041d93ac9aed07713f868fa3fc1d30a60c4ad80bc727570bf70ef656259d570cace5b097d181e428d59df67b7574a2c9cf1fc8c509bf173cab7237a5d3d9a7ba9a39a3266c22b90c774437b99826bea8ea195d3f2de77975d1fc00b797bed8812c537a376ba283bfae235fce5ce393d9223a00854c710bdc90cc51e4566eeed7778c7077746bfd53971efffcdb2f97995bf8b0e8285a25d3328f69a1799ed4c1486c1cee2d23b5d101a39bccfc3299c6346c492740905b69cd4b5f2771392faae0259aec9bb8768baaf6b127abd12ae53cadc8f2e3da2fa29b9b5137b9823d92fbdee565724ccb978d2fb326e85a2ce36995e4e5fc6c2d8f7464e7f15ac1da2a6b3f7f38f9e968b3ff87933f0e9779591dfbda25b35868f2b0645a457733d7e3b36ade2c67ae1e2761ec18c158cdaca441e7e40c1ab03e1f0ed3056d23f8282a6a5258277e63a4052de53c096b7cbc394986afbd5f5fdc18eb56e2f5edbeeb15e355355d861ba5506086f041c335322b8c94a3e8efd2fb40dcb228e80f054f72457b0ba1ac311343917de55d133764aef5369bc3da65ae5c39120dc004a2bab9f9d86a7e043d90f97f5ffaa7ecaf94060b1b7abeb0bfccb916da99b1910ec7b24036b6499e8fadcc0a8da9118a619b3300ffdd19ecd619c276f406a31fc1280ec81952a3b53a04ea930e610f1d4191a3383ee10ed6ee08010cd4a0d872ce76056d103b54d43c3768295b6820659c194911220c6fa5d618506a223b500b945de4b6607911d4ea1ed48a8eee10cc00c1ca8c32468155aa2bb286d383b21fb29281191659863b43f6b1d8d78d2c47328a9454c6694b15581bb2524800de01584ad9426c0b151cccfadf11583500b0ff25cd1a8328fa31ab1f65aedd338bbb4bb3fa8dd9fb30a19aca2a0a5e652cb561d6b4326bc39089ea40adb08af16dc182209f3fb5f27f46ad153614ec3da8956ce8e25808d815b52496b3376a376102e15771a5844244aa92dba845a975c7e2986e446ca1565258e2eba216bf07b51654bf96560a0662506a6588a71d51fb58ecaba6564a2629d3927d95a6fe165ba9a57e17bb645a457d316c0b9597c02cb70330cb0d52b382ccd0c31324b6fae211b09685e8ea571c4bc51ed63bbb7f758c6277c492daa162e6d9112b095282482168ceb56ee355496635eff4e298d283c46db1820f4bb2e7496c075f7c539655c0d6dd9b45b0568ab666e56b688d10b21fb4766868b9d85947fb95d8e7c22c1ba4a36560396ad0548c59aa805ba9d55a1ae8d4d11a4d9dccb66079097916fae459d3d91df4dcd460a4505c006a293b675a8e42f62b8d913fca5dbb87964a855d511bd43ec7ef68bbd463bda9d5d21a6129540ca7c20ca00d5acd8c94dda0b586db2da9366cf302a03583404bc623530b006a456cf8eaa72bb422ccec072d0e9d69a909dd59791cd4be95c79b300101dc9255b456a8856d7be72134394075fabf0a0e942eccb6587911af8efb7c43ab7a94c7dff6128aa03520daa0fd78f30f7f9c3c8cbf260000"
	data, err := hex.DecodeString(rawhex)
	if err != nil {
		errorExit("hex.DecodeString error: %v\n", err)
	}

	err = os.WriteFile("/tmp/bandwidth-gzipjs.gz", data, 0664)
	if err != nil {
		errorExit("os.WriteFile error: %v\n", err)
	}
}

func gzip_compress(dst io.Writer, src io.Reader) error {
	gz := gzip.NewWriter(dst)
	defer gz.Close()
	_, err := io.Copy(gz, src)
	return err
}

func gzip_decompress(dst io.Writer, src io.Reader) error {
	gz, err := gzip.NewReader(src)
	if err != nil {
		return err
	}
	_, err = io.Copy(dst, gz)
	return err
}

func errorExit(format string, v ...any) {
	fmt.Fprintf(os.Stderr, format, v...)
	os.Exit(1)
}
