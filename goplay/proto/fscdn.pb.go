// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: fscdn.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CdnDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cdn     string  `protobuf:"bytes,1,opt,name=cdn,proto3" json:"cdn,omitempty"`
	Domains *string `protobuf:"bytes,2,opt,name=domains,proto3,oneof" json:"domains,omitempty"`
}

func (x *CdnDomainsRequest) Reset() {
	*x = CdnDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnDomainsRequest) ProtoMessage() {}

func (x *CdnDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnDomainsRequest.ProtoReflect.Descriptor instead.
func (*CdnDomainsRequest) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{0}
}

func (x *CdnDomainsRequest) GetCdn() string {
	if x != nil {
		return x.Cdn
	}
	return ""
}

func (x *CdnDomainsRequest) GetDomains() string {
	if x != nil && x.Domains != nil {
		return *x.Domains
	}
	return ""
}

type CdnDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int64                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error      string                        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Domainkeys *CdnDomainsResponse_DomainKey `protobuf:"bytes,3,opt,name=domainkeys,proto3" json:"domainkeys,omitempty"`
}

func (x *CdnDomainsResponse) Reset() {
	*x = CdnDomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnDomainsResponse) ProtoMessage() {}

func (x *CdnDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnDomainsResponse.ProtoReflect.Descriptor instead.
func (*CdnDomainsResponse) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{1}
}

func (x *CdnDomainsResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CdnDomainsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CdnDomainsResponse) GetDomainkeys() *CdnDomainsResponse_DomainKey {
	if x != nil {
		return x.Domainkeys
	}
	return nil
}

type CdnStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cdn       string                 `protobuf:"bytes,1,opt,name=cdn,proto3" json:"cdn,omitempty"`
	Domains   string                 `protobuf:"bytes,2,opt,name=domains,proto3" json:"domains,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Force     *bool                  `protobuf:"varint,5,opt,name=force,proto3,oneof" json:"force,omitempty"`
}

func (x *CdnStatRequest) Reset() {
	*x = CdnStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnStatRequest) ProtoMessage() {}

func (x *CdnStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnStatRequest.ProtoReflect.Descriptor instead.
func (*CdnStatRequest) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{2}
}

func (x *CdnStatRequest) GetCdn() string {
	if x != nil {
		return x.Cdn
	}
	return ""
}

func (x *CdnStatRequest) GetDomains() string {
	if x != nil {
		return x.Domains
	}
	return ""
}

func (x *CdnStatRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CdnStatRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CdnStatRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type CdnStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int64                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string                            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Stats map[string]*CdnStatResponsePoints `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CdnStatResponse) Reset() {
	*x = CdnStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnStatResponse) ProtoMessage() {}

func (x *CdnStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnStatResponse.ProtoReflect.Descriptor instead.
func (*CdnStatResponse) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{3}
}

func (x *CdnStatResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CdnStatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CdnStatResponse) GetStats() map[string]*CdnStatResponsePoints {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CdnDomainsResponse_DomainKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CdnDomainsResponse_DomainKey) Reset() {
	*x = CdnDomainsResponse_DomainKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnDomainsResponse_DomainKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnDomainsResponse_DomainKey) ProtoMessage() {}

func (x *CdnDomainsResponse_DomainKey) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnDomainsResponse_DomainKey.ProtoReflect.Descriptor instead.
func (*CdnDomainsResponse_DomainKey) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CdnDomainsResponse_DomainKey) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CdnDomainsResponse_DomainKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CdnStatResponsePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Region    int64 `protobuf:"varint,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *CdnStatResponsePoint) Reset() {
	*x = CdnStatResponsePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnStatResponsePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnStatResponsePoint) ProtoMessage() {}

func (x *CdnStatResponsePoint) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnStatResponsePoint.ProtoReflect.Descriptor instead.
func (*CdnStatResponsePoint) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CdnStatResponsePoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CdnStatResponsePoint) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CdnStatResponsePoint) GetRegion() int64 {
	if x != nil {
		return x.Region
	}
	return 0
}

type CdnStatResponsePoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*CdnStatResponsePoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *CdnStatResponsePoints) Reset() {
	*x = CdnStatResponsePoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fscdn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnStatResponsePoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnStatResponsePoints) ProtoMessage() {}

func (x *CdnStatResponsePoints) ProtoReflect() protoreflect.Message {
	mi := &file_fscdn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnStatResponsePoints.ProtoReflect.Descriptor instead.
func (*CdnStatResponsePoints) Descriptor() ([]byte, []int) {
	return file_fscdn_proto_rawDescGZIP(), []int{3, 1}
}

func (x *CdnStatResponsePoints) GetPoints() []*CdnStatResponsePoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_fscdn_proto protoreflect.FileDescriptor

var file_fscdn_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x73, 0x63, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x11,
	0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x64, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xb4,
	0x01, 0x0a, 0x12, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4b,
	0x65, 0x79, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x35,
	0x0a, 0x09, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x0e, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x64, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x64, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x0f, 0x43, 0x64,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x53, 0x0a, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a,
	0x38, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x64, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x51, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x64, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xc0, 0x01, 0x0a,
	0x0d, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x52,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x12, 0x12, 0x2e, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x64, 0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x12, 0x5b, 0x0a, 0x13, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x0f, 0x2e, 0x43, 0x64, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x43, 0x64, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x64, 0x6e, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x62,
	0x6f, 0x78, 0x2f, 0x6e, 0x65, 0x74, 0x2d, 0x64, 0x65, 0x66, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x2f,
	0x66, 0x73, 0x63, 0x64, 0x6e, 0x2e, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fscdn_proto_rawDescOnce sync.Once
	file_fscdn_proto_rawDescData = file_fscdn_proto_rawDesc
)

func file_fscdn_proto_rawDescGZIP() []byte {
	file_fscdn_proto_rawDescOnce.Do(func() {
		file_fscdn_proto_rawDescData = protoimpl.X.CompressGZIP(file_fscdn_proto_rawDescData)
	})
	return file_fscdn_proto_rawDescData
}

var file_fscdn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_fscdn_proto_goTypes = []interface{}{
	(*CdnDomainsRequest)(nil),            // 0: CdnDomainsRequest
	(*CdnDomainsResponse)(nil),           // 1: CdnDomainsResponse
	(*CdnStatRequest)(nil),               // 2: CdnStatRequest
	(*CdnStatResponse)(nil),              // 3: CdnStatResponse
	(*CdnDomainsResponse_DomainKey)(nil), // 4: CdnDomainsResponse.DomainKey
	(*CdnStatResponsePoint)(nil),         // 5: CdnStatResponse.point
	(*CdnStatResponsePoints)(nil),        // 6: CdnStatResponse.points
	nil,                                  // 7: CdnStatResponse.StatsEntry
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
}
var file_fscdn_proto_depIdxs = []int32{
	4, // 0: CdnDomainsResponse.domainkeys:type_name -> CdnDomainsResponse.DomainKey
	8, // 1: CdnStatRequest.startTime:type_name -> google.protobuf.Timestamp
	8, // 2: CdnStatRequest.endTime:type_name -> google.protobuf.Timestamp
	7, // 3: CdnStatResponse.stats:type_name -> CdnStatResponse.StatsEntry
	5, // 4: CdnStatResponse.points.points:type_name -> CdnStatResponse.point
	6, // 5: CdnStatResponse.StatsEntry.value:type_name -> CdnStatResponse.points
	0, // 6: CdnStatistics.ListCdnDomains:input_type -> CdnDomainsRequest
	2, // 7: CdnStatistics.CdnDomainsBandwidth:input_type -> CdnStatRequest
	1, // 8: CdnStatistics.ListCdnDomains:output_type -> CdnDomainsResponse
	3, // 9: CdnStatistics.CdnDomainsBandwidth:output_type -> CdnStatResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_fscdn_proto_init() }
func file_fscdn_proto_init() {
	if File_fscdn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fscdn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnDomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnDomainsResponse_DomainKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnStatResponsePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fscdn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnStatResponsePoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fscdn_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_fscdn_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fscdn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fscdn_proto_goTypes,
		DependencyIndexes: file_fscdn_proto_depIdxs,
		MessageInfos:      file_fscdn_proto_msgTypes,
	}.Build()
	File_fscdn_proto = out.File
	file_fscdn_proto_rawDesc = nil
	file_fscdn_proto_goTypes = nil
	file_fscdn_proto_depIdxs = nil
}
